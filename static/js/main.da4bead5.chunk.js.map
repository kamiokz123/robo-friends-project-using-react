{"version":3,"sources":["reportWebVitals.js","components/Card.jsx","components/Cardlist.jsx","components/Searchbar.jsx","components/Scroll.jsx","containers/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","React","createElement","className","src","concat","id","alt","name","email","Cardlist","robots","map","user","i","key","Searchbar","OnSearch","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","_useState","useState","_useState2","_slicedToArray","setRobots","_useState3","_useState4","searchfield","setSearchfield","useEffect","fetch","res","json","users","filter_robo","filter","robot","toLowerCase","includes","length","event","target","value","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8KAYeA,SAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,sBCWCY,EAdH,SAACC,GACT,OACIC,IAAAC,cAAA,OAAKC,UAAU,sDACXF,IAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BL,EAAMM,IAAMC,IAAI,QAClDN,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKF,EAAMQ,MACXP,IAAAC,cAAA,SAAIF,EAAMS,UCcXC,EAnBC,SAAFjB,GAAc,IAAVkB,EAAMlB,EAANkB,OACd,OACAV,IAAAC,cAAA,WAECS,EAAOC,IAAI,SAACC,EAAKC,GACd,OACAb,IAAAC,cAACH,EAAI,CACJgB,IAAKD,EACLR,GAAE,GAAAD,OAAKM,EAAOG,GAAGR,IACjBG,MAAK,GAAAJ,OAAKM,EAAOG,GAAGL,OACpBD,KAAI,GAAAH,OAAKM,EAAOG,GAAGN,YCIZQ,EAhBC,SAADvB,GAAe,IAAZwB,EAAQxB,EAARwB,SACb,OACEhB,IAAAC,cAAA,OAAKC,UAAU,IACXF,IAAAC,cAAA,SACAC,UAAU,wBACVe,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCAPI,SARF,SAACrB,GACZ,OACEC,IAAAC,cAAA,OAAKoB,MAAO,CAACC,UAAW,SAAWC,OAAQ,kBAAoBC,OAAO,UACjEzB,EAAM0B,YC8CAC,MAzCf,WAAc,IAAAC,EAGYC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BjB,EAAMmB,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACYJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAzCE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAKjCG,oBAAU,WACPC,MAAM,8CACL/C,KAAK,SAAAgD,GAAG,OAAGA,EAAIC,SACfjD,KAAK,SAAAkD,GAAK,OAAET,EAAUS,MACxB,IAGF,IAIKC,EAAY/B,EAAOgC,OACjB,SAAAC,GACI,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASX,EAAYU,iBAKhE,OAASlC,EAAOoC,OACT9C,IAAAC,cAAA,OAAKC,UAAU,MACXF,IAAAC,cAAA,MAAIC,UAAU,MAAM,yBACpBF,IAAAC,cAACc,EAAS,CAACC,SAdH,SAAC+B,GACjBZ,EAAeY,EAAMC,OAAOC,UAcpBjD,IAAAC,cAACmB,EAAM,KACNpB,IAAAC,cAACQ,EAAQ,CACPC,OAAQ+B,MANEzC,IAAAC,cAAA,UAAI,YC/BhBiD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtD,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACyB,EAAG,QAORzC","file":"static/js/main.da4bead5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst Card= (props)=>{\r\n    return(\r\n        <div className=\"bg-light-green tc p-card grow dib bw2 br3 pa2 ma2 \">\r\n            <img src={`https://robohash.org/${props.id}`} alt=\"pic\" />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Card;","\r\nimport React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst Cardlist= ({robots})=>{\r\n    return(\r\n    <div>\r\n        {\r\n     robots.map((user,i)=>{\r\n        return (\r\n        <Card\r\n         key={i} \r\n         id={`${robots[i].id}`} \r\n         email={`${robots[i].email}`} \r\n         name={`${robots[i].name}`} \r\n         />\r\n        );\r\n    })\r\n       }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from \"react\";\r\n\r\n\r\n const Searchbar=({OnSearch})=>{\r\n      return(\r\n        <div className=\"\">\r\n            <input \r\n            className=\"bg-light-blue pa2 ma2\" \r\n            type=\"search\" \r\n            placeholder=\"search robots\"\r\n            onChange={OnSearch}\r\n\r\n            />\r\n\r\n        </div>\r\n      );\r\n      }\r\n\r\n\r\n export default Searchbar;","import React from \"react\";\r\n\r\nconst Scroll=(props)=>{\r\n  return (\r\n    <div style={{overflowY: \"scroll\" , border: \"3px solid black\" , height:\"700px\"}}>\r\n        {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;","import React, {useState,useEffect} from \"react\";\r\nimport Cardlist from \"../components/Cardlist\";\r\nimport Searchbar from \"../components/Searchbar\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\n\r\n\r\n\r\n\r\nfunction App(){\r\n\r\n\r\nconst [robots, setRobots]=useState([]);\r\nconst [searchfield, setSearchfield]=useState(\"\");\r\n\r\n\r\n\r\n\r\n useEffect(()=>{\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(res=> res.json())\r\n    .then(users=>setRobots(users));\r\n },[])\r\n\r\n\r\n const OnSearchRobo=(event)=>{\r\n    setSearchfield(event.target.value);\r\n }\r\n\r\nconst filter_robo=robots.filter(\r\n        robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        }\r\n    );\r\n\r\n \r\n return  !robots.length? <h1>loading</h1> :\r\n        <div className=\"tc\" >\r\n            <h1 className=\"f1\" >KAMRAN'S ROBO FRIENDS</h1>\r\n            <Searchbar OnSearch={OnSearchRobo}/>\r\n            <Scroll>\r\n             <Cardlist\r\n               robots={filter_robo}/>\r\n            </Scroll>\r\n        </div>\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from \"./containers/App\";\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n"],"sourceRoot":""}